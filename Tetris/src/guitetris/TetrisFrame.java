/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guitetris;
import data.*;
/**
 *
 * @author Francis
 */
public class TetrisFrame extends javax.swing.JFrame {
    /**
     * Rejilla para dividir las celdas
     */
    private Rejilla rejilla;
    /**
     * Para mostrar la figura siguiente:
     */
    public SiguienteFigura siguiente;
    /**
     * Nueva figura que caera
     */
    private Figura figura;
    private Figura figuraSiguiente;
    
    /**
     * Variables que recogen el tiempo, nivel y puntos
     */
    private int nivel;
    private int puntos;
    
    private Mueve mueve;
    /**
     * Creates new form TetrisFrame
     */
    public TetrisFrame() {
        initComponents();
        rejilla = new Rejilla(12,22);
        rejilla.initRejilla();
        siguiente = new SiguienteFigura(this);
        nivel = 0;
        puntos = 0;
        inicializaJuego();
    }

    /**
    * Obtiene una nueva figura cuyo tipo es seleccionado de forma aleatoria
    */
    public void nuevaFigura(){
        figura = renovar();
    }
    /**
     * Incrementa puntos en 5
     */
    public void incrementarPuntos(){
        puntos += 5;
    }
    
    /**
    * Genera una nueva Figura de tipo aleatorio
    * y crea la hebra que ejecuta
    * la tarea de mover la figura actual.
    */
    private void inicializaJuego() {
        renovar();
        
        if(mueve==null){
            mueve=new Mueve(this,2);
            
        }else if(mueve.getTerminado()){
            
            mueve=new Mueve(this,2);
        }
        
        Thread t=new Thread(mueve);
        t.start();
        mueve.reanudar();
    }
    
    public int getPuntosInt(){
        return puntos;
    }
    
    public void incrementarNivel(){
        nivel++;
        mueve.subeDificultad(nivel);
    }
    
    public String getNivel(){
        return "Nivel: " + nivel;
    }
    
    public String getPuntos(){
        return "Puntos: " + puntos;
    }
    
    public Figura getSiguiente(){
        return figuraSiguiente;
    }
    public Figura renovar(){
        if (figura == null){
            figura = Figura.nuevaFigura();
            figuraSiguiente = Figura.nuevaFigura();
        } else {
            figura = figuraSiguiente;
            figuraSiguiente = Figura.nuevaFigura();
        }
        siguienteFigura1.repaint();
        return figura;
    }
    /**
     * Devuelve el panel de tiempo
     * @return panel de tiempo
     */
    public PanelTiempo getPanelTiempo(){
        return panelTiempo1;
    }
    
    
    /**
    * Obtiene una referencia al panel donde se dibujan las piezas del juego
    * @return una referencia al panel del juego
    */
    public RejillaPanel getPanel(){
        return rejillaPanel1;
    }
    
    /**
     * Devuelve Panel Datos
     */
    public PanelDatos getPanelDatos(){
        return panelDatos1;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rejillaPanel1 = new RejillaPanel(this);
        siguienteFigura1 = new SiguienteFigura(this);
        panelDatos1 = new PanelDatos(this);
        panelTiempo1 = new PanelTiempo(this);
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        NewItem = new javax.swing.JMenuItem();
        ExitItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout rejillaPanel1Layout = new javax.swing.GroupLayout(rejillaPanel1);
        rejillaPanel1.setLayout(rejillaPanel1Layout);
        rejillaPanel1Layout.setHorizontalGroup(
            rejillaPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        rejillaPanel1Layout.setVerticalGroup(
            rejillaPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout siguienteFigura1Layout = new javax.swing.GroupLayout(siguienteFigura1);
        siguienteFigura1.setLayout(siguienteFigura1Layout);
        siguienteFigura1Layout.setHorizontalGroup(
            siguienteFigura1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        siguienteFigura1Layout.setVerticalGroup(
            siguienteFigura1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelDatos1Layout = new javax.swing.GroupLayout(panelDatos1);
        panelDatos1.setLayout(panelDatos1Layout);
        panelDatos1Layout.setHorizontalGroup(
            panelDatos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        panelDatos1Layout.setVerticalGroup(
            panelDatos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelTiempo1Layout = new javax.swing.GroupLayout(panelTiempo1);
        panelTiempo1.setLayout(panelTiempo1Layout);
        panelTiempo1Layout.setHorizontalGroup(
            panelTiempo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTiempo1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(90, Short.MAX_VALUE))
        );
        panelTiempo1Layout.setVerticalGroup(
            panelTiempo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTiempo1Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        FileMenu.setMnemonic('F');
        FileMenu.setText("File");
        FileMenu.setToolTipText("File");

        NewItem.setMnemonic('N');
        NewItem.setText("New");
        NewItem.setToolTipText("New");
        NewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewItemActionPerformed(evt);
            }
        });
        FileMenu.add(NewItem);

        ExitItem.setMnemonic('X');
        ExitItem.setText("Exit");
        ExitItem.setToolTipText("Exit");
        ExitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitItemActionPerformed(evt);
            }
        });
        FileMenu.add(ExitItem);

        jMenuBar1.add(FileMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(siguienteFigura1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelDatos1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTiempo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(59, 59, 59)
                .addComponent(rejillaPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(siguienteFigura1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelDatos1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelTiempo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rejillaPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitItemActionPerformed

    private void NewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewItemActionPerformed
        rejilla.initRejilla();
        inicializaJuego();
    }//GEN-LAST:event_NewItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TetrisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TetrisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TetrisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TetrisFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TetrisFrame().setVisible(true);
            }
        });
    }
    
    /**
    * Obtiene una referencia a la Rejilla del juego
    * @return una referencia a la Rejilla del juego
    */
    public Rejilla getRejilla(){
        return rejilla;
    }
    /**
    * Obtiene una referencia a la Figura que cae actualmente en el juego
    * @return una referencia a la Figura actual
    */
    public Figura getFigura(){
        return figura;
    }
    
    public Mueve getMueve(){
        return mueve;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ExitItem;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem NewItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private guitetris.PanelDatos panelDatos1;
    private guitetris.PanelTiempo panelTiempo1;
    private guitetris.RejillaPanel rejillaPanel1;
    private guitetris.SiguienteFigura siguienteFigura1;
    // End of variables declaration//GEN-END:variables
}
